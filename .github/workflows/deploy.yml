name: Docker Image veröffentlichen

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', 'gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build mit Gradle
        run: ./gradlew bootJar

      - name: Docker Login zur GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Build und Push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ghcr.io/${{format(github.repository, '{0}')}}:${{ github.sha }}
          build-args: |
            SPRING_PROFILES_ACTIVE: prod # Standardmäßig Prod-Profil setzen

      - name: Docker Push mit Latest Tag (optional, für Main-Branch)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ghcr.io/${{ ${{ format(github.repository, '{0}') }} }}:latest
          build-args: |
            SPRING_PROFILES_ACTIVE: prod # Standardmäßig Prod-Profil setzen